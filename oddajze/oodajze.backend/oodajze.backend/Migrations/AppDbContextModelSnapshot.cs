// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace oodajze.backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("oodajze.backend.Models.CollectionPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Latitude")
                        .HasColumnType("REAL");

                    b.Property<double>("Longitude")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CollectionPoints");
                });

            modelBuilder.Entity("oodajze.backend.Models.CollectionVisitQrData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CollectionPointId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PointsEarned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QrCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ScannedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CollectionPointId");

                    b.HasIndex("UserId");

                    b.ToTable("CollectionVisitQrData");
                });

            modelBuilder.Entity("oodajze.backend.Models.CouponTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CouponStore")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PointsRequired")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CouponTemplates");
                });

            modelBuilder.Entity("oodajze.backend.Models.ProductQrData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BatchNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CollectionVisitQrDataId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MaterialType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RecyclingCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CollectionVisitQrDataId");

                    b.ToTable("ProductQrDatas");
                });

            modelBuilder.Entity("oodajze.backend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("oodajze.backend.Models.UserCoupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CouponTemplateId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RedeemedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("RedemptionCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CouponTemplateId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCoupons");
                });

            modelBuilder.Entity("oodajze.backend.Models.CollectionVisitQrData", b =>
                {
                    b.HasOne("oodajze.backend.Models.CollectionPoint", "CollectionPoint")
                        .WithMany()
                        .HasForeignKey("CollectionPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("oodajze.backend.Models.User", "User")
                        .WithMany("CollectionVisitQrDataHistory")
                        .HasForeignKey("UserId");

                    b.Navigation("CollectionPoint");

                    b.Navigation("User");
                });

            modelBuilder.Entity("oodajze.backend.Models.ProductQrData", b =>
                {
                    b.HasOne("oodajze.backend.Models.CollectionVisitQrData", null)
                        .WithMany("Products")
                        .HasForeignKey("CollectionVisitQrDataId");
                });

            modelBuilder.Entity("oodajze.backend.Models.UserCoupon", b =>
                {
                    b.HasOne("oodajze.backend.Models.CouponTemplate", "CouponTemplate")
                        .WithMany()
                        .HasForeignKey("CouponTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("oodajze.backend.Models.User", null)
                        .WithMany("RedeemedCoupons")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CouponTemplate");
                });

            modelBuilder.Entity("oodajze.backend.Models.CollectionVisitQrData", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("oodajze.backend.Models.User", b =>
                {
                    b.Navigation("CollectionVisitQrDataHistory");

                    b.Navigation("RedeemedCoupons");
                });
#pragma warning restore 612, 618
        }
    }
}
